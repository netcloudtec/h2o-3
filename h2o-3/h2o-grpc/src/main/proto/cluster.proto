syntax = "proto3";

import "common.proto";

option java_package = "ai.h2o.api.proto.core";
option java_multiple_files = true;

package core;


service Cluster {
    rpc status (Empty) returns (ClusterInfo);
    rpc nodes (Empty) returns (NodesInfo);
}


message ClusterInfo {
    Error error = 1;

    // h2o software version
    string version = 2;
    string branch_name = 3;
    string build_number = 4;
    string build_age = 5;

    // general cluster information
    string name = 6;
    int32 num_nodes = 7;
    int32 num_nodes_unhealthy = 8;
    int64 uptime_ms = 9;
    bool has_consensus = 10;
    bool is_locked = 11;
    bool client_mode = 12;
}


message NodesInfo {
    Error error = 1;

    repeated NodeInfo node = 2;
}


message NodeInfo {
    // Error error = 1;

    // Generic info
    string address = 2;
    bool is_healthy = 3;
    int32 pid = 4;
    int32 num_cpus = 5;
    int32 num_cpus_allowed = 6;

    // CPU usage
    float sys_load = 7;       // Average #runnables/#cores
    float my_cpu_percentage = 8;
    float sys_cpu_percentage = 9;
    double gflops = 10;

    // memory footprint
    double memory_bandwidth = 11;
    int64 memory_data = 12;
    int64 memory_java = 13;
    int64 memory_free = 14;

    // resources
    int32 num_keys = 15;
    int32 num_threads = 16;
    int32 num_active_rpcs = 17;
    int32 num_open_tcps = 18;
    int32 num_open_fds = 19;

    // counts of threads / tasks in each priority queue (from lowest to highest)
    repeated int32 fj_thread_count = 20;
    repeated int32 fj_queue_count = 21;
}


