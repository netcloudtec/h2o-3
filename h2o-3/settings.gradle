rootProject.name = 'h2o-3'

include 'h2o-core'
include 'h2o-algos'
include 'h2o-web'
include 'h2o-app'
include 'h2o-r'
include 'h2o-py'
include 'h2o-assemblies:main'
include 'h2o-assemblies:genmodel'
include 'h2o-persist-gcs'
include 'h2o-persist-hdfs'
include 'h2o-persist-s3'
include 'h2o-persist-http'
include 'h2o-docs'
include 'h2o-hadoop:h2o-mapreduce-generic'
include 'h2o-hadoop:h2o-yarn-generic'
include 'h2o-genmodel'
include 'h2o-bindings'
include 'h2o-test-integ'
include 'h2o-test-accuracy'
include 'h2o-avro-parser'
include 'h2o-orc-parser'
include 'h2o-parquet-parser'
include 'h2o-parquet-v17-compat'
include 'h2o-jaas-pam'
include 'h2o-automl'
include 'h2o-genmodel-ext-xgboost'
include 'h2o-ext-xgboost'
include 'h2o-ext-krbstandalone'
include 'h2o-ext-authsupport'
include 'h2o-ext-jython-cfunc'

// GRPC support
if ("true".equals(System.getenv("H2O_BUILD_GRPC"))) {
    include 'h2o-assemblies:py2o'
    include 'h2o-grpc'
}

// Reconfigure scala projects to support cross compilation
// The following code will create two projects for each included item:
//   For example: h2o-scala_2.10, h2o-scala_2.11
apply plugin: 'scala-cross-build'

scalaCrossCompile {
  targetVersions "2.10.4", "2.11.7"
  include 'h2o-scala'
}

// Make structure flat and avoid annoying dummy modules
rootProject.children.each { project ->
  if (project.name.startsWith("h2o-") && project.name.endsWith("-parser")) {
    String projectDirName = "h2o-parsers/${project.name}"
    project.projectDir = new File(settingsDir, projectDirName)
  }
  // Parser Compatibility Testing
  if (project.name.startsWith("h2o-") && project.name.endsWith("-compat")) {
    String projectDirName = "h2o-parsers/" + project.name.replaceFirst("-v[0-9]+-", "-") + "/" + project.name
    project.projectDir = new File(settingsDir, projectDirName)
  }
  if (project.name.startsWith("h2o-ext-")) {
    String projectDirName = "h2o-extensions/${project.name - 'h2o-ext-'}"
    project.projectDir = new File(settingsDir, projectDirName)
  }
  if (project.name.startsWith("h2o-genmodel-ext-")) {
    String projectDirName = "h2o-genmodel-extensions/${project.name - 'h2o-genmodel-ext-'}"
    project.projectDir = new File(settingsDir, projectDirName)
  }
}

//
// Include Hadoop builds only if requested
//
if (System.getProperty("user.name").equals("jenkins")
        || System.getenv("BUILD_HADOOP") != null
        || System.getenv("H2O_TARGET") != null) {

  // Default hadoop build targets
  def allTargets = [
         "cdh5.4", "cdh5.5", "cdh5.6", "cdh5.7", "cdh5.8", "cdh5.9", "cdh5.10", "cdh5.13", "cdh5.14",
         "hdp2.2", "hdp2.3", "hdp2.4", "hdp2.5", "hdp2.6",
         "mapr4.0", "mapr5.0", "mapr5.1", "mapr5.2", "iop4.2"
  ]
  // Compute targets
  def targets = System.getenv("H2O_TARGET") != null ? System.getenv("H2O_TARGET").split(",").collect { it.trim() } : allTargets
  // Include selected/all Hadoop targets
  if (System.getenv("BUILD_HADOOP") != "false") {
    targets.each { name ->
      include "h2o-hadoop:h2o-${name}"
      include "h2o-hadoop:h2o-${name}-assembly"
    }
  }
}
