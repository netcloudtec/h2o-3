description = "H2O Integration Testing"

dependencies {
    compile project(":h2o-assemblies:main")
}

def runner = new File("$rootDir/scripts/run.py").canonicalPath


// Python MultiJVMTests
// --------------------

def pythonMultiJVMTestsPath = new File("$rootDir/py/testdir_multi_jvm")

task runPythonMultiJVMTests(type: Exec) {
    workingDir pythonMultiJVMTestsPath
	def args = ['python', runner, '--wipeall', '--numclouds', '2', '--jvm.xmx', '2g']
    if (project.hasProperty("jacocoCoverage")) {
        args << '--jacoco'
    }
    if (System.getenv('ADDITIONAL_TEST_JVM_OPTS')) {
        args += "--jvm.opts"
        args += System.getenv('ADDITIONAL_TEST_JVM_OPTS')
    }
    commandLine args
}

task cleanPythonMultiJVMTests(type: Delete) {
    delete "$pythonMultiJVMTestsPath/results"
}

task cleanPythonMultiJVMTestsCoverageData(type: Delete) {
    delete "$pythonMultiJVMTestsPath/results/jacoco"
}

apply from: '../gradle/dataCheck.gradle'

test.dependsOn smalldataCheck
test.dependsOn runPythonMultiJVMTests
clean.dependsOn cleanPythonMultiJVMTests


// NodeJS SingleJVMTests
// ---------------------

def nodeJsSingleJVMTestsPath = new File("$rootDir/h2o-web")

task runNodeJsSingleJVMTests(type: Exec) {
    workingDir nodeJsSingleJVMTestsPath
    def args = ['python', runner, '--wipeall', '--numclouds', '1', '--test', 'src/main/resources/www/steam/js/steam-tests.js', '--jvm.xmx', '4g'
]
    if (project.hasProperty("jacocoCoverage")) {
        args << '--jacoco'
    }
    commandLine args
}

task cleanNodeJsSingleJVMTests(type: Delete) {
    delete "$nodeJsSingleJVMTestsPath/results"
}

task cleanNodeJsSingleJVMTestsCoverageData(type: Delete) {
    delete "$nodeJsSingleJVMTestsPath/results/jacoco"
}

// Commented out on 12/15/2014
// test.dependsOn runNodeJsSingleJVMTests
clean.dependsOn cleanNodeJsSingleJVMTests

//task cleanCoverageData {
//    dependsOn cleanNodeJsSingleJVMTestsCoverageData, cleanPythonMultiJVMTestsCoverageData
//}

