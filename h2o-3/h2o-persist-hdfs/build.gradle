
description = "H2O Persist HDFS"

configurations {
    compile.exclude module: 'servlet-api'
    testCompile.exclude module: 'servlet-api'
}

dependencies {
    compile project(":h2o-core")
    compile('net.java.dev.jets3t:jets3t:0.9.0')
    compile("org.apache.hadoop:hadoop-hdfs-client:$defaultHadoopClientVersion") {
        // Pull all dependencies to allow run directly from IDE or command line
        transitive = true
    }
    compile("org.apache.hadoop:hadoop-aws:$defaultHadoopClientVersion")
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.hamcrest:hamcrest-junit:2.0.0.0"
    testCompile project(path: ":h2o-core", configuration: "testArchives")
}

apply from: "${rootDir}/gradle/dataCheck.gradle"

task s3CredentialsCheck(group: "S3") {
    description = "Validates that core-site.xml file is present."
    doLast {
        def coreSitePath = System.getenv("JUNIT_CORE_SITE_PATH")
        if (! coreSitePath)
            throw new ResourceException('Environment property JUNIT_CORE_SITE_PATH is not defined.')
        if (! file(coreSitePath).isFile())
            throw new ResourceException("File ${coreSitePath} does not exist")
    }
}

test {
    dependsOn ":h2o-core:testJar"
    dependsOn smalldataCheck, s3CredentialsCheck, cpLibs, jar, testJar, testMultiNode

    // Defeat task 'test' by running no tests.
    exclude '**'
}
